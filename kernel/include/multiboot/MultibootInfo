/*== QiOS =====================================================================+
|                                                                              |
|    Author: Liew Tze Wei                                                      |
|                                                                              |
|    This file is part of the QiOS kernel, and is made available under the     |
|    terms of The Unlicense (That means just do whatever you want with the     |
|    code base).                                                               |
|                                                                              |
+=============================================================================*/
#pragma once

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//   MultibootInfo                                                            //
//   -  Multiboot2 information service                                        //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#if !(__x86_64__)
	#error \
		"[QiOS (64 bits) - MultibootInfo] requires x86_64 architecture. Please use the right compiler options."
#endif
////////////////////////////////////////////////////////////////////////////////
//    INTERFACE REQUIRED HEADERS                                              //
////////////////////////////////////////////////////////////////////////////////

#include <multiboot/multiboot2.h>
#include <stddef.h>
#include <stdint.h>
#include <system/ccdefs>

namespace QKernel { namespace Multiboot {

////////////////////////////////////////////////////////////////////////////////
//    STRUCTURE PROTOTYPE                                                     //
////////////////////////////////////////////////////////////////////////////////

// class MulbootInfo;

////////////////////////////////////////////////////////////////////////////////
//    INTERFACE DEFINITIONS/ENUMERATIONS/SIMPLE TYPEDEFS                      //
////////////////////////////////////////////////////////////////////////////////

// #define MAX_MMAP 20

// MulbootInfo *g_pMbInfo;

////////////////////////////////////////////////////////////////////////////////
//    INTERFACE STRUCTURES                                                    //
////////////////////////////////////////////////////////////////////////////////

// class MulbootInfo {
// 	uintptr_t m_mb2i;

// 	//	Constructor
// public:
// 	MulbootInfo();

// 	//	Attributes
// public:
// 	uintptr_t get_MBInfoAddr(void) { return m_mb2i; }
// 	void	  set_MBInfoAddr(uintptr_t pMbInfo);

// 	//	Operation
// public:
// 	//	For now, just the memory map
// 	multiboot_memory_map_t *GetMemoryMap(void) const;
// 	void					RelocateTo(uintptr_t newLocation);
// };

// class MemoryMap : public IEnumerable<multiboot_mmap_entry> {

// 	multiboot_mmap_entry *m_pCurrent;
// 	void *				  m_pPtr;

// public:	   //	Constructor
// 	MemoryMap();
// 	virtual ~MemoryMap();

// public:	   // Operations
// 	virtual bool				  MoveNext();
// 	virtual multiboot_mmap_entry &Current() const;
// 	virtual void				  Reset();
// };

////////////////////////////////////////////////////////////////////////////////
//    INTERFACE FUNCTION PROTOTYPES                                           //
////////////////////////////////////////////////////////////////////////////////

//	Initialize multiboot infor
void MBInitInfo(System::VirtAddr mbiAddr);

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//    End MultibootInfo                                                       //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

}}	  // namespace QKernel::Multiboot